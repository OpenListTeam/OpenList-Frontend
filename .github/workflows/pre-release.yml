name: Pre Release Build

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      draft:
        description: "Create draft release"
        required: false
        default: true
        type: boolean

jobs:
  pre-release:
    name: Pre Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org"

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        id: pnpm-install
        with:
          version: 9
          run_install: false

      - name: Generate pre-release version
        id: version
        run: |
          # Get latest tag or default to v0.0.0
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          # Get short commit hash
          commit_hash=$(git rev-parse --short HEAD)
          # Get current date for build number
          build_date=$(date +%Y%m%d)

          # Remove 'v' prefix from tag for semver processing
          version_base=${latest_tag#v}

          # Create proper semver pre-release version
          pre_version="v${version_base}-pre.${build_date}.${commit_hash}"

          echo "Latest tag: $latest_tag"
          echo "Pre-release version: $pre_version"
          echo "version=$pre_version" >> $GITHUB_OUTPUT

          # Create temporary tag for build script
          git tag "$pre_version"

      - name: Build Pre-release
        run: |
          chmod +x build.sh
          ./build.sh --dev --compress
        env:
          CROWDIN_PROJECT_ID: ${{ secrets.CROWDIN_PROJECT_ID }}
          CROWDIN_PERSONAL_TOKEN: ${{ secrets.CROWDIN_PERSONAL_TOKEN }}

      - name: Upload Pre-release Assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: Pre-release ${{ steps.version.outputs.version }}
          files: dist/*.tar.gz
          prerelease: true
          draft: ${{ github.event_name == 'workflow_dispatch' && inputs.draft || false }}

permissions:
  contents: write
