name: build and release

on:
  push:
    branches:
      - main
    tags:
      - "*.*.*"

jobs:
  build:
    strategy:
      matrix:
        platform: [ubuntu-latest]
    name: Build
    runs-on: ${{ matrix.platform }}
    permissions:
      packages: write
      contents: write
    steps:
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org"

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        id: pnpm-install
        with:
          version: 9
          run_install: false

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
          path: openlist-web
          persist-credentials: false
          fetch-depth: 0
          submodules: recursive

      - name: Replace package version
        if: startsWith(github.ref, 'refs/tags')
        id: package_version
        run: |
          cd alist-web
          version=$(git describe --abbrev=0 --tags)
          sed -i -e "s/\"version\": \"0.0.0\"/\"version\": \"$version\"/g" package.json
          cat package.json
          echo "app_version=$version" >> $GITHUB_ENV

      - name: Build
        run: |
          cd openlist-web
          pnpm install
          # pnpm i18n:build
          pnpm build
          cd ..
        # env:
        #   CROWDIN_PROJECT_ID: ${{ secrets.CROWDIN_PROJECT_ID }}
        #   CROWDIN_PERSONAL_TOKEN: ${{ secrets.CROWDIN_PERSONAL_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: openlist-web/dist/*
          if-no-files-found: 'error'

      - name: Compress dist for release use
        if: startsWith(github.ref, 'refs/tags')
        run: |
          mkdir compress
          tar -czvf compress/dist.tar.gz openlist-web/dist/*
          zip -r compress/dist.zip openlist-web/dist/*

      - name: Create a Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags')
        with:
          files: |
            compress/dist.tar.gz
            compress/dist.zip
          tag_name: ${{ env.app_version }}
          name: Auto Release of ${{ env.app_version }}
          make_latest: "true"
        