name: Release Build

on:
  push:
    tags:
      - "*"
  workflow_dispatch:
    inputs:
      draft:
        description: "Create draft release"
        required: false
        default: true
        type: boolean
      version:
        description: "Version tag (for manual trigger, e.g., v1.0.0)"
        required: false
        type: string

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org"

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        id: pnpm-install
        with:
          run_install: false

      - name: Setup version for manual trigger
        if: github.event_name == 'workflow_dispatch' && inputs.version
        run: |
          git tag ${{ inputs.version }}
          echo "Created temporary tag: ${{ inputs.version }}"

      - name: Generate changelog
        run: npx changelogithub --output ${{ github.workspace }}-CHANGELOG.txt

      - name: Build Release
        run: |
          chmod +x build.sh
          ./build.sh --release --compress
        env:
          CROWDIN_PROJECT_ID: ${{ secrets.CROWDIN_PROJECT_ID }}
          CROWDIN_PERSONAL_TOKEN: ${{ secrets.CROWDIN_PERSONAL_TOKEN }}

      - name: Publish npm
        if: ${{ !(github.event_name == 'workflow_dispatch' && inputs.draft) }}
        run: |
          if [ -z "${{ secrets.NPM_TOKEN }}" ]; then
            echo "NPM_TOKEN not set, skipping npm publish"
          else
            echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > ~/.npmrc
            pnpm publish --no-git-checks
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Read version from dist/VERSION
        id: version
        run: echo "tag_name=$(cat dist/VERSION)" >> $GITHUB_OUTPUT

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ steps.version.outputs.tag_name }}
          tag_name: ${{ steps.version.outputs.tag_name }}
          files: dist/openlist-frontend-dist-v*.tar.gz
          fail_on_unmatched_files: true
          body_path: ${{ github.workspace }}-CHANGELOG.txt
          draft: ${{ github.event_name == 'workflow_dispatch' && inputs.draft || false }}

permissions:
  contents: write
